<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	
	<!-- This is where we configure Spring-Security  -->
	<!--<security:http auto-config="true" use-expressions="true" access-denied-page="/services/auth/denied" >
	
		<security:intercept-url pattern="/services/api/**" access="permitAll"/>	
	
	</security:http>

	<bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService" />
		<property name="passwordEncoder">
			<bean class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
				<constructor-arg value="256" />
			</bean>
		</property>
		<property name="saltSource">
			<bean
				class="org.springframework.security.authentication.dao.ReflectionSaltSource">
				<property name="userPropertyToUse" value="username" />
			</bean>
		</property>
	</bean>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="daoAuthenticationProvider" />
	</security:authentication-manager>-->
	
	<!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the database -->
	<!--<bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>	

	<bean id="openIduserDetailsService" class="com.justasec.web.security.auth.OpenIdUserDetailsService"/>-->
	<!--<bean id="userDetailsService" class="com.easyfinder.map.controller.UserDetailsService"/> -->
</beans>


